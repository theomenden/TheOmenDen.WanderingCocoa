plugins {
    id 'dev.architectury.loom' version '1.7.+' apply false
    id 'architectury-plugin' version '3.4.+'
    id 'com.github.johnrengelman.shadow' version '8.1.+' apply false
    id "maven-publish"
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    group = rootProject.group
    version = rootProject.version

    base {
        archivesName = "wanderingcocoa"
    }

    repositories {
        mavenCentral()
        // rest of repositories block...
        maven {
            name = "Jamalam's Maven"
            url = "https://maven.jamalam.tech/releases"
            content {
                includeGroup "io.github.jamalam360"
            }
        }

        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
        }

        maven {
            name = "ParchmentMC"
            url = "https://maven.parchmentmc.org"
        }

        maven {
            name = "Jitpack"
            url = "https://jitpack.io"
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 21
    }

    tasks.create("prepareWorkspace") {}

    java {
        withSourcesJar()
    }
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    jar {
        manifest {
            attributes([
                    'Specification-Title' : mod_name,
                    'Specification-Version': project.jar.archiveVersion,
                    'Implementation-Title' : project.name,
                    'Implementation-Version': project.jar.archiveVersion,
                    'Built-On-Java': "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                    'Built-On-Minecraft': minecraft_version,
                    'JamLib-File-Name' : "wanderingcocoa-${project.base.archivesName.get()}-${rootProject.version}.jar",
            ])
        }
    }

    dependencies {
        minecraft "net.minecraft:minecraft:${rootProject.minecraft_version}"
        mappings  loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-1.21:${libs.versions.parchment.get()}")
        }
    }
}

tasks.publish {
    dependsOn("clean")
    dependsOn("githubRelease")
    dependsOn("fabric:publishedUnified")
    dependsOn("neoforge:publishUnified")
}