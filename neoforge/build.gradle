plugins {
    id 'com.github.johnrengelman.shadow' version "8.1.+"
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    mods {
        neoForge {
            sourceSet project(":neoforge").sourceSets.main
        }
    }
}

configurations {
        common
        shadowCommon
        compileClasspath.extendsFrom common
        runtimeClasspath.extendsFrom common
        developmentNeoForge.extendsFrom common
 }

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
    maven { url "https://www.cursemaven.com"}
}



dependencies {
    neoForge libs.neoforge
    modImplementation libs.architectury.neoforge
    forgeRuntimeLibrary libs.jankson

    implementation project(path: ":neoforge", configuration: "namedElements")
    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionNeoForge")) { transitive false }
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/neoforge.mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}
components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}
